{
    "sourceFile": "src/app/components/AllBooking.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 8,
            "patches": [
                {
                    "date": 1719587418231,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1719587918531,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,10 +1,8 @@\n import React, { useState, useEffect } from \"react\";\n import { FaDownload } from \"react-icons/fa6\";\n import jsPDF from \"jspdf\";\n import \"jspdf-autotable\";\n-import TestComponent from \"./TestComponent\";\n-// import QRCode from \"qrcode\";\n \n const Modal = ({ showModal, handleClose, children }) => {\n   if (!showModal) return null;\n \n@@ -30,8 +28,33 @@\n       </div>\n     </div>\n   );\n };\n+\n+const TestComponent = ({ data }) => {\n+  return (\n+    <div>\n+      <h2>Tests:</h2>\n+      {data.bookingSlip.tests.map((test) => (\n+        <div key={test.id}>\n+          <h3>{test.name}</h3>\n+          <p>Barcode: {test.barCode}</p>\n+          <p>Cost: {test.cost}</p>\n+          <p>Code: {test.code}</p>\n+          <h4>Test Panel Report:</h4>\n+          <p>Name: {test.testPanelReport.name}</p>\n+          {test.testPanelReport.testMasterReportList.map((report) => (\n+            <div key={report.testReport.testReportId}>\n+              <p>Test Master Name: {report.testMasterName}</p>\n+              {/* Display other relevant details for the test report */}\n+            </div>\n+          ))}\n+        </div>\n+      ))}\n+    </div>\n+  );\n+};\n+\n const AllBooking = () => {\n   const [bookings, setBookings] = useState([]);\n   const [date, setDate] = useState(new Date().toISOString().split(\"T\")[0]);\n   const [showModal, setShowModal] = useState(false);\n@@ -111,8 +134,9 @@\n   );\n };\n \n export default AllBooking;\n+\n // const AllBooking = () => {\n //   const [bookings, setBookings] = useState([]);\n //   const [data, setData] = useState({});\n //   const [date, setDate] = useState(new Date().toISOString().split(\"T\")[0]);\n"
                },
                {
                    "date": 1719588038368,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -33,28 +33,56 @@\n const TestComponent = ({ data }) => {\n   return (\n     <div>\n       <h2>Tests:</h2>\n-      {data.bookingSlip.tests.map((test) => (\n-        <div key={test.id}>\n-          <h3>{test.name}</h3>\n-          <p>Barcode: {test.barCode}</p>\n-          <p>Cost: {test.cost}</p>\n-          <p>Code: {test.code}</p>\n-          <h4>Test Panel Report:</h4>\n-          <p>Name: {test.testPanelReport.name}</p>\n-          {test.testPanelReport.testMasterReportList.map((report) => (\n-            <div key={report.testReport.testReportId}>\n-              <p>Test Master Name: {report.testMasterName}</p>\n-              {/* Display other relevant details for the test report */}\n-            </div>\n+      <table>\n+        <thead>\n+          <tr>\n+            <th>Test Name</th>\n+            <th>Barcode</th>\n+            <th>Cost</th>\n+            <th>Code</th>\n+            <th>Test Panel Report</th>\n+            {/* Add more table headers as needed */}\n+          </tr>\n+        </thead>\n+        <tbody>\n+          {data.bookingSlip.tests.map((test) => (\n+            <tr key={test.id}>\n+              <td>{test.name}</td>\n+              <td>{test.barCode}</td>\n+              <td>{test.cost}</td>\n+              <td>{test.code}</td>\n+              <td>\n+                <table>\n+                  <thead>\n+                    <tr>\n+                      <th>Name</th>\n+                      <th>Test Master Name</th>\n+                      {/* Add more table headers as needed */}\n+                    </tr>\n+                  </thead>\n+                  <tbody>\n+                    {test.testPanelReport.testMasterReportList.map((report) => (\n+                      <tr key={report.testReport.testReportId}>\n+                        <td>{test.testPanelReport.name}</td>\n+                        <td>{report.testMasterName}</td>\n+                        {/* Add more table data as needed */}\n+                      </tr>\n+                    ))}\n+                  </tbody>\n+                </table>\n+              </td>\n+              {/* Add more table data as needed */}\n+            </tr>\n           ))}\n-        </div>\n-      ))}\n+        </tbody>\n+      </table>\n     </div>\n   );\n };\n \n+\n const AllBooking = () => {\n   const [bookings, setBookings] = useState([]);\n   const [date, setDate] = useState(new Date().toISOString().split(\"T\")[0]);\n   const [showModal, setShowModal] = useState(false);\n"
                },
                {
                    "date": 1719588253096,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -28,8 +28,64 @@\n       </div>\n     </div>\n   );\n };\n+const TestReportModal = ({ testReport }) => {\n+  if (testReport.report_type === \"UltraSoundReport\") {\n+    return (\n+      <div>\n+        <h3>UltraSound Report</h3>\n+        <table>\n+          <tbody>\n+            <tr>\n+              <td>Header:</td>\n+              <td>{testReport.header}</td>\n+            </tr>\n+            <tr>\n+              <td>Investigation Value Map:</td>\n+              <td>\n+                {/* Display the investigationValueMap data */}\n+              </td>\n+            </tr>\n+            <tr>\n+              <td>Body:</td>\n+              <td>{testReport.body}</td>\n+            </tr>\n+            <tr>\n+              <td>Impression:</td>\n+              <td>{testReport.impression}</td>\n+            </tr>\n+          </tbody>\n+        </table>\n+      </div>\n+    );\n+  } else if (testReport.report_type === \"MatrixTestReportTemplate\") {\n+    return (\n+      <div>\n+        <h3>Matrix Test Report Template</h3>\n+        <table>\n+          <thead>\n+            <tr>\n+              <th>Week</th>\n+              <th>Growth Measurement</th>\n+              <th>Comments</th>\n+            </tr>\n+          </thead>\n+          <tbody>\n+            {Object.entries(testReport.columns).map(([week, data]) => (\n+              <tr key={week}>\n+                <td>{week}</td>\n+                <td>{data.growth_measurement}</td>\n+                <td>{data.comments}</td>\n+              </tr>\n+            ))}\n+          </tbody>\n+        </table>\n+      </div>\n+    );\n+  }\n+  return null;\n+};\n \n const TestComponent = ({ data }) => {\n   return (\n     <div>\n@@ -57,16 +113,26 @@\n                   <thead>\n                     <tr>\n                       <th>Name</th>\n                       <th>Test Master Name</th>\n+                      <th>Report Type</th>\n+                      <th>Test Report ID</th>\n+                      <th>Test Report Date</th>\n+                      <th>View Report</th>\n                       {/* Add more table headers as needed */}\n                     </tr>\n                   </thead>\n                   <tbody>\n                     {test.testPanelReport.testMasterReportList.map((report) => (\n                       <tr key={report.testReport.testReportId}>\n                         <td>{test.testPanelReport.name}</td>\n                         <td>{report.testMasterName}</td>\n+                        <td>{report.testReport.report_type}</td>\n+                        <td>{report.testReport.testReportId}</td>\n+                        <td>{report.testReport.testReportDate}</td>\n+                        <td>\n+                          <TestReportModal testReport={report.testReport} />\n+                        </td>\n                         {/* Add more table data as needed */}\n                       </tr>\n                     ))}\n                   </tbody>\n"
                },
                {
                    "date": 1719588417932,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -229,312 +229,4 @@\n };\n \n export default AllBooking;\n \n-// const AllBooking = () => {\n-//   const [bookings, setBookings] = useState([]);\n-//   const [data, setData] = useState({});\n-//   const [date, setDate] = useState(new Date().toISOString().split(\"T\")[0]);\n-\n-//   const fetchBookings = async (selectedDate) => {\n-//     try {\n-//       const response = await fetch(\n-//         `http://ec2-13-233-207-62.ap-south-1.compute.amazonaws.com:8080/api/v1/lab/bookings?date=${selectedDate}`,\n-//         {\n-//           method: \"GET\",\n-//           headers: {\n-//             \"X-API-KEY\": \"test123\",\n-//             \"X-PARTNER-ID\": \"PYTHONMAN2\",\n-//           },\n-//         }\n-//       );\n-//       const result = await response.json();\n-//       console.log(result, \"data-----\");\n-//       setBookings(result);\n-//     } catch (error) {\n-//       console.error(\"Error fetching bookings:\", error);\n-//     }\n-//   };\n-\n-//   useEffect(() => {\n-//     fetchBookings(date);\n-//   }, [date]);\n-\n-//   const pdfData = {\n-//     patientName: \"john \",\n-//     age: \"21 Years\",\n-//     sex: \"Male\",\n-//     pid: \"555\",\n-//     sampleCollectedAt: \"125, Shivam Bungalow, S G Road, Mumbai\",\n-//     refBy: \"Dr. Hiren Shah\",\n-//     registeredOn: \"02:31 PM 02 Dec, 2X\",\n-//     collectedOn: \"03:11 PM 02 Dec, 2X\",\n-//     reportedOn: \"04:35 PM 02 Dec, 2X\",\n-//     results: [\n-//       {\n-//         investigation: \"Hemoglobin (Hb)\",\n-//         result: \"12.5\",\n-//         reference: \"13.0 - 17.0\",\n-//         unit: \"g/dL\",\n-//         className: \"low\",\n-//       },\n-//       {\n-//         investigation: \"Total RBC count\",\n-//         result: \"5.2\",\n-//         reference: \"4.5 - 5.5\",\n-//         unit: \"mill/cumm\",\n-//       },\n-//       {\n-//         investigation: \"Packed Cell Volume (PCV)\",\n-//         result: \"57.5\",\n-//         reference: \"40 - 50\",\n-//         unit: \"%\",\n-//         className: \"high\",\n-//       },\n-//       {\n-//         investigation: \"Mean Corpuscular Volume (MCV)\",\n-//         result: \"87.75\",\n-//         reference: \"83 - 101\",\n-//         unit: \"fL\",\n-//       },\n-//       {\n-//         investigation: \"MCH\",\n-//         result: \"27.2\",\n-//         reference: \"27 - 32\",\n-//         unit: \"pg\",\n-//       },\n-//       {\n-//         investigation: \"MCHC\",\n-//         result: \"32.8\",\n-//         reference: \"32.5 - 34.5\",\n-//         unit: \"g/dL\",\n-//       },\n-//       {\n-//         investigation: \"RDW\",\n-//         result: \"13.6\",\n-//         reference: \"11.6 - 14.0\",\n-//         unit: \"%\",\n-//       },\n-//       {\n-//         investigation: \"Total WBC count\",\n-//         result: \"9000\",\n-//         reference: \"4000-11000\",\n-//         unit: \"cumm\",\n-//       },\n-//       {\n-//         investigation: \"Neutrophils\",\n-//         result: \"60\",\n-//         reference: \"50 - 62\",\n-//         unit: \"%\",\n-//       },\n-//       {\n-//         investigation: \"Lymphocytes\",\n-//         result: \"31\",\n-//         reference: \"20 - 40\",\n-//         unit: \"%\",\n-//       },\n-//       {\n-//         investigation: \"Eosinophils\",\n-//         result: \"1\",\n-//         reference: \"00 - 06\",\n-//         unit: \"%\",\n-//       },\n-//       {\n-//         investigation: \"Monocytes\",\n-//         result: \"7\",\n-//         reference: \"00 - 10\",\n-//         unit: \"%\",\n-//       },\n-//       {\n-//         investigation: \"Basophils\",\n-//         result: \"1\",\n-//         reference: \"00 - 02\",\n-//         unit: \"%\",\n-//       },\n-//       {\n-//         investigation: \"Platelet Count\",\n-//         result: \"150000\",\n-//         reference: \"150000 - 410000\",\n-//         unit: \"cumm\",\n-//       },\n-//     ],\n-//     interpretation: \"Further confirm for Anemia\",\n-//     generatedOn: \"02 Dec, 20XX 05:00 PM\",\n-//     technicians: [\n-//       { name: \"Medical Lab Technician\", title: \"(DMLT, BMLT)\" },\n-//       { name: \"Dr. Payal Shah\", title: \"(MD, Pathologist)\" },\n-//       { name: \"Dr. Vimal Shah\", title: \"(MD, Pathologist)\" },\n-//     ],\n-//   };\n-\n-//   const generatePDF = async (data) => {\n-//     const doc = new jsPDF();\n-\n-//     // Add 7Labs heading\n-//     doc.setFontSize(24);\n-//     doc.text(\"7Labs\", 80, 20);\n-\n-//     // Add title and other content\n-\n-//     // Generate QR Code\n-//     // const qrCodeUrl = await QRCode.toDataURL(\n-//     //   `${data.patientDetails.firstName} ${data.patientDetails.lastName}`\n-//     // );\n-//     // doc.addImage(qrCodeUrl, \"PNG\", 160, 10, 50, 50);\n-\n-//     // Add patient information\n-//     doc.setFontSize(12);\n-//     doc.text(\"Patient Information\", 10, 90);\n-//     doc.setFontSize(10);\n-//     doc.text(\n-//       `Name: ${data.patientDetails.firstName} ${data.patientDetails.lastName}`,\n-//       10,\n-//       100\n-//     );\n-//     doc.text(`Age: ${data.patientDetails.ageInYears} Years`, 10, 110);\n-//     doc.text(`Sex: ${data.patientDetails.gender}`, 10, 120);\n-//     doc.text(`PID: ${data.patientDetails.patientId}`, 10, 130);\n-\n-//     // Add sample information\n-//     doc.setFontSize(12);\n-//     doc.text(\"Sample Information\", 100, 90);\n-//     doc.setFontSize(10);\n-//     doc.text(`Sample Collected At: ${data.bookingSlip.sampleBy}`, 100, 100);\n-//     doc.text(`Ref. By: ${data.bookingSlip.referralDoctorId}`, 100, 110);\n-//     doc.text(\n-//       `Registered on: ${data.bookingSlip.date} ${data.bookingSlip.time}`,\n-//       100,\n-//       120\n-//     );\n-//     doc.text(\n-//       `Collected on: ${data.bookingSlip.date} ${data.bookingSlip.time}`,\n-//       100,\n-//       130\n-//     );\n-//     doc.text(\n-//       `Reported on: ${data.bookingSlip.date} ${data.bookingSlip.time}`,\n-//       100,\n-//       140\n-//     );\n-\n-//     // Add table\n-//     let y = 150;\n-//     for (const test of data.bookingSlip.tests) {\n-//       const testMasterReportTable = [\n-//         // Add headers\n-//         [\"Investigation\", \"Result\", \"Reference Value\", \"Unit\"],\n-//         ...test.testPanelReport.testMasterReportList.map((report) => {\n-//           const investigation = report.testMasterName;\n-//           const result = report.testReport?.result ?? \"\";\n-//           const referenceValue = report.testReport?.referenceValue ?? \"\";\n-//           const unit = report.testReport?.unit ?? \"\";\n-\n-//           // Add test master reports\n-//           const testMasterReports = report.testMasterReports ?? [];\n-//           const testMasterReportRows = testMasterReports.map((subReport) => {\n-//             const subInvestigation = subReport.testMasterName;\n-//             const subResult = subReport.testReport?.result ?? \"\";\n-//             const subReferenceValue =\n-//               subReport.testReport?.referenceValue ?? \"\";\n-//             const subUnit = subReport.testReport?.unit ?? \"\";\n-//             return [subInvestigation, subResult, subReferenceValue, subUnit];\n-//           });\n-\n-//           // Add row for current report\n-//           return [\n-//             [investigation, result, referenceValue, unit],\n-//             ...testMasterReportRows,\n-//           ];\n-//         }),\n-//       ];\n-\n-//       // Check if testMasterReportTable is not empty\n-//       if (testMasterReportTable.length > 1) {\n-//         doc.setFontSize(12);\n-//         doc.text(test.name, 10, y);\n-//         doc.autoTable({\n-//           head: testMasterReportTable.slice(0, 1),\n-//           body: testMasterReportTable.slice(1),\n-//           startY: y + 10,\n-//           margin: { left: 10 },\n-//           theme: \"striped\",\n-//         });\n-//         y += 40 + (testMasterReportTable.length - 1) * 10;\n-//       }\n-//     }\n-\n-//     // Add interpretation\n-//     doc.text(\n-//       \"Interpretation: Further confirm for Anemia\",\n-//       10,\n-//       doc.lastAutoTable.finalY + 10\n-//     );\n-\n-//     // Add signatures\n-//     // doc.text(\"________________________\", 10, doc.lastAutoTable.finalY + 30);\n-//     // doc.text(\"Medical Lab Technician\", 10, doc.lastAutoTable.finalY + 40);\n-//     // doc.text(\"(DMLT, BMLT)\", 10, doc.lastAutoTable.finalY + 50);\n-\n-//     // doc.text(\"________________________\", 70, doc.lastAutoTable.finalY + 30);\n-//     // doc.text(\"Dr. Payal Shah\", 70, doc.lastAutoTable.finalY + 40);\n-//     // doc.text(\"(MD, Pathologist)\", 70, doc.lastAutoTable.finalY + 50);\n-\n-//     // doc.text(\"________________________\", 140, doc.lastAutoTable.finalY + 30);\n-//     // doc.text(\"Dr. Vimal Shah\", 140, doc.lastAutoTable.finalY + 40);\n-//     // doc.text(\"(MD, Pathologist)\", 140, doc.lastAutoTable.finalY + 50);\n-\n-//     // Add footer\n-//     doc.text(\n-//       `Generated on: ${data.bookingSlip.date} ${data.bookingSlip.time}`,\n-//       10,\n-//       doc.lastAutoTable.finalY + 70\n-//     );\n-\n-//     // Save the PDF\n-//     doc.save(\"pathology-report.pdf\");\n-//   };\n-//   console.log(data, \"booking\");\n-//   return (\n-//     <>\n-//       <div className=\"max-w-4xl mx-auto p-4 bg-white shadow-md rounded-lg\">\n-//         <h1 className=\"text-2xl font-bold mb-4\">ALL Bookings of {date}</h1>\n-//         <div className=\"flex items-center border rounded-lg overflow-hidden mb-4\">\n-//           <input\n-//             type=\"date\"\n-//             value={date}\n-//             className=\"w-full px-3 py-2 border-none outline-none\"\n-//             onChange={(e) => {\n-//               setDate(e.target.value);\n-//             }}\n-//           />\n-//         </div>\n-//         <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n-//           {bookings.map((booking) => (\n-//             <div key={booking.id} className=\"bg-white shadow-md rounded-lg p-4\">\n-//               <h2 className=\"text-xl font-semibold mb-2\">\n-//                 {booking.patientDetails.firstName}{\" \"}\n-//                 {booking.patientDetails.lastName}\n-//               </h2>\n-//               <p className=\"text-gray-700\">\n-//                 Patient ID: {booking.bookingSlip.patientId}\n-//               </p>\n-//               <p className=\"text-gray-700\">Date: {booking.bookingSlip.date}</p>\n-//               <p className=\"text-gray-700\">Time: {booking.bookingSlip.time}</p>\n-//               <button\n-//                 className=\"px-3 py-3 bg-gray-200 hover:bg-gray-300 text-gray-600\"\n-//                 onClick={() => {\n-//                   setData(booking);\n-//                   // generatePDF(booking);\n-//                 }} // <-- Wrap in anonymous function\n-//               >\n-//                 <FaDownload className=\"text-black-500 test-2xl\" />\n-//               </button>\n-//             </div>\n-//           ))}\n-//         </div>\n-//       </div>\n-//       <TestComponent data={data} />\n-//     </>\n-//   );\n-// };\n-\n-// export default AllBooking;\n"
                },
                {
                    "date": 1719588550145,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -28,55 +28,56 @@\n       </div>\n     </div>\n   );\n };\n+\n const TestReportModal = ({ testReport }) => {\n   if (testReport.report_type === \"UltraSoundReport\") {\n     return (\n       <div>\n-        <h3>UltraSound Report</h3>\n-        <table>\n+        <h3 className=\"text-lg font-semibold mb-2\">UltraSound Report</h3>\n+        <table className=\"w-full border-collapse\">\n           <tbody>\n             <tr>\n-              <td>Header:</td>\n-              <td>{testReport.header}</td>\n+              <td className=\"border px-4 py-2\">Header:</td>\n+              <td className=\"border px-4 py-2\">{testReport.header}</td>\n             </tr>\n             <tr>\n-              <td>Investigation Value Map:</td>\n-              <td>\n+              <td className=\"border px-4 py-2\">Investigation Value Map:</td>\n+              <td className=\"border px-4 py-2\">\n                 {/* Display the investigationValueMap data */}\n               </td>\n             </tr>\n             <tr>\n-              <td>Body:</td>\n-              <td>{testReport.body}</td>\n+              <td className=\"border px-4 py-2\">Body:</td>\n+              <td className=\"border px-4 py-2\">{testReport.body}</td>\n             </tr>\n             <tr>\n-              <td>Impression:</td>\n-              <td>{testReport.impression}</td>\n+              <td className=\"border px-4 py-2\">Impression:</td>\n+              <td className=\"border px-4 py-2\">{testReport.impression}</td>\n             </tr>\n           </tbody>\n         </table>\n       </div>\n     );\n   } else if (testReport.report_type === \"MatrixTestReportTemplate\") {\n     return (\n       <div>\n-        <h3>Matrix Test Report Template</h3>\n-        <table>\n+        <h3 className=\"text-lg font-semibold mb-2\">Matrix Test Report Template</h3>\n+        <table className=\"w-full border-collapse\">\n           <thead>\n             <tr>\n-              <th>Week</th>\n-              <th>Growth Measurement</th>\n-              <th>Comments</th>\n+              <th className=\"border px-4 py-2\">Week</th>\n+              <th className=\"border px-4 py-2\">Growth Measurement</th>\n+              <th className=\"border px-4 py-2\">Comments</th>\n             </tr>\n           </thead>\n           <tbody>\n             {Object.entries(testReport.columns).map(([week, data]) => (\n               <tr key={week}>\n-                <td>{week}</td>\n-                <td>{data.growth_measurement}</td>\n-                <td>{data.comments}</td>\n+                <td className=\"border px-4 py-2\">{week}</td>\n+                <td className=\"border px-4 py-2\">{data.growth_measurement}</td>\n+                <td className=\"border px-4 py-2\">{data.comments}</td>\n               </tr>\n             ))}\n           </tbody>\n         </table>\n@@ -88,49 +89,49 @@\n \n const TestComponent = ({ data }) => {\n   return (\n     <div>\n-      <h2>Tests:</h2>\n-      <table>\n+      <h2 className=\"text-xl font-semibold mb-2\">Tests:</h2>\n+      <table className=\"w-full border-collapse\">\n         <thead>\n           <tr>\n-            <th>Test Name</th>\n-            <th>Barcode</th>\n-            <th>Cost</th>\n-            <th>Code</th>\n-            <th>Test Panel Report</th>\n+            <th className=\"border px-4 py-2\">Test Name</th>\n+            <th className=\"border px-4 py-2\">Barcode</th>\n+            <th className=\"border px-4 py-2\">Cost</th>\n+            <th className=\"border px-4 py-2\">Code</th>\n+            <th className=\"border px-4 py-2\">Test Panel Report</th>\n             {/* Add more table headers as needed */}\n           </tr>\n         </thead>\n         <tbody>\n           {data.bookingSlip.tests.map((test) => (\n             <tr key={test.id}>\n-              <td>{test.name}</td>\n-              <td>{test.barCode}</td>\n-              <td>{test.cost}</td>\n-              <td>{test.code}</td>\n-              <td>\n-                <table>\n+              <td className=\"border px-4 py-2\">{test.name}</td>\n+              <td className=\"border px-4 py-2\">{test.barCode}</td>\n+              <td className=\"border px-4 py-2\">{test.cost}</td>\n+              <td className=\"border px-4 py-2\">{test.code}</td>\n+              <td className=\"border px-4 py-2\">\n+                <table className=\"w-full border-collapse\">\n                   <thead>\n                     <tr>\n-                      <th>Name</th>\n-                      <th>Test Master Name</th>\n-                      <th>Report Type</th>\n-                      <th>Test Report ID</th>\n-                      <th>Test Report Date</th>\n-                      <th>View Report</th>\n+                      <th className=\"border px-4 py-2\">Name</th>\n+                      <th className=\"border px-4 py-2\">Test Master Name</th>\n+                      <th className=\"border px-4 py-2\">Report Type</th>\n+                      <th className=\"border px-4 py-2\">Test Report ID</th>\n+                      <th className=\"border px-4 py-2\">Test Report Date</th>\n+                      <th className=\"border px-4 py-2\">View Report</th>\n                       {/* Add more table headers as needed */}\n                     </tr>\n                   </thead>\n                   <tbody>\n                     {test.testPanelReport.testMasterReportList.map((report) => (\n                       <tr key={report.testReport.testReportId}>\n-                        <td>{test.testPanelReport.name}</td>\n-                        <td>{report.testMasterName}</td>\n-                        <td>{report.testReport.report_type}</td>\n-                        <td>{report.testReport.testReportId}</td>\n-                        <td>{report.testReport.testReportDate}</td>\n-                        <td>\n+                        <td className=\"border px-4 py-2\">{test.testPanelReport.name}</td>\n+                        <td className=\"border px-4 py-2\">{report.testMasterName}</td>\n+                        <td className=\"border px-4 py-2\">{report.testReport.report_type}</td>\n+                        <td className=\"border px-4 py-2\">{report.testReport.testReportId}</td>\n+                        <td className=\"border px-4 py-2\">{report.testReport.testReportDate}</td>\n+                        <td className=\"border px-4 py-2\">\n                           <TestReportModal testReport={report.testReport} />\n                         </td>\n                         {/* Add more table data as needed */}\n                       </tr>\n@@ -146,9 +147,8 @@\n     </div>\n   );\n };\n \n-\n const AllBooking = () => {\n   const [bookings, setBookings] = useState([]);\n   const [date, setDate] = useState(new Date().toISOString().split(\"T\")[0]);\n   const [showModal, setShowModal] = useState(false);\n@@ -210,13 +210,13 @@\n             </p>\n             <p className=\"text-gray-700\">Date: {booking.bookingSlip.date}</p>\n             <p className=\"text-gray-700\">Time: {booking.bookingSlip.time}</p>\n             <button\n-              className=\"px-3 py-3 bg-gray-200 hover:bg-gray-300 text-gray-600\"\n+              className=\"px-3 py-2 bg-blue-500 text-white rounded hover:bg-blue-600\"\n               onClick={() => handleOpenModal(booking)}\n             >\n-              <FaDownload className=\"text-black-500 test-2xl\" />\n-              {/* View and Download PDF */}\n+              <FaDownload className=\"inline-block mr-2\" />\n+              View and Download PDF\n             </button>\n           </div>\n         ))}\n       </div>\n@@ -228,5 +228,4 @@\n   );\n };\n \n export default AllBooking;\n-\n"
                },
                {
                    "date": 1719589382981,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,116 +29,95 @@\n     </div>\n   );\n };\n \n-const TestReportModal = ({ testReport }) => {\n-  if (testReport.report_type === \"UltraSoundReport\") {\n-    return (\n-      <div>\n-        <h3 className=\"text-lg font-semibold mb-2\">UltraSound Report</h3>\n-        <table className=\"w-full border-collapse\">\n-          <tbody>\n-            <tr>\n-              <td className=\"border px-4 py-2\">Header:</td>\n-              <td className=\"border px-4 py-2\">{testReport.header}</td>\n-            </tr>\n-            <tr>\n-              <td className=\"border px-4 py-2\">Investigation Value Map:</td>\n-              <td className=\"border px-4 py-2\">\n-                {/* Display the investigationValueMap data */}\n-              </td>\n-            </tr>\n-            <tr>\n-              <td className=\"border px-4 py-2\">Body:</td>\n-              <td className=\"border px-4 py-2\">{testReport.body}</td>\n-            </tr>\n-            <tr>\n-              <td className=\"border px-4 py-2\">Impression:</td>\n-              <td className=\"border px-4 py-2\">{testReport.impression}</td>\n-            </tr>\n-          </tbody>\n-        </table>\n-      </div>\n-    );\n-  } else if (testReport.report_type === \"MatrixTestReportTemplate\") {\n-    return (\n-      <div>\n-        <h3 className=\"text-lg font-semibold mb-2\">Matrix Test Report Template</h3>\n-        <table className=\"w-full border-collapse\">\n-          <thead>\n-            <tr>\n-              <th className=\"border px-4 py-2\">Week</th>\n-              <th className=\"border px-4 py-2\">Growth Measurement</th>\n-              <th className=\"border px-4 py-2\">Comments</th>\n-            </tr>\n-          </thead>\n-          <tbody>\n-            {Object.entries(testReport.columns).map(([week, data]) => (\n-              <tr key={week}>\n-                <td className=\"border px-4 py-2\">{week}</td>\n-                <td className=\"border px-4 py-2\">{data.growth_measurement}</td>\n-                <td className=\"border px-4 py-2\">{data.comments}</td>\n-              </tr>\n-            ))}\n-          </tbody>\n-        </table>\n-      </div>\n-    );\n-  }\n-  return null;\n-};\n+const TestComponent = ({ data }) => {\n+  const renderTestPanelReport = (testPanelReport) => {\n+    if (testPanelReport.testMasterReportList) {\n+      return testPanelReport.testMasterReportList.map((report) => {\n+        if (report.testReport) {\n+          if (report.testReport.report_type === \"UltraSoundReport\") {\n+            return (\n+              <div key={report.testReport.testReportId}>\n+                <h4>UltraSound Report</h4>\n+                <p>Header: {report.testReport.header}</p>\n+                <p>Body: {report.testReport.body}</p>\n+                <p>Impression: {report.testReport.impression}</p>\n+                {/* Add more UltraSoundReport details as needed */}\n+              </div>\n+            );\n+          } else if (report.testReport.report_type === \"MatrixTestReportTemplate\") {\n+            return (\n+              <div key={report.testReport.testReportId}>\n+                <h4>Matrix Test Report Template</h4>\n+                <table>\n+                  <thead>\n+                    <tr>\n+                      <th>Week</th>\n+                      <th>Growth Measurement</th>\n+                      <th>Comments</th>\n+                    </tr>\n+                  </thead>\n+                  <tbody>\n+                    {Object.entries(report.testReport.columns).map(([week, data]) => (\n+                      <tr key={week}>\n+                        <td>{week}</td>\n+                        <td>{data.growth_measurement}</td>\n+                        <td>{data.comments}</td>\n+                      </tr>\n+                    ))}\n+                  </tbody>\n+                </table>\n+                {/* Add more MatrixTestReportTemplate details as needed */}\n+              </div>\n+            );\n+          } else if (report.testReport.report_type === \"BloodReport\") {\n+            return (\n+              <div key={report.testReport.testReportId}>\n+                <h4>Blood Report</h4>\n+                <p>Investigation: {report.testReport.investigation}</p>\n+                <p>Value: {report.testReport.value}</p>\n+                <p>Unit: {report.testReport.unit}</p>\n+                <p>Min Reference Value: {report.testReport.minReferenceValue}</p>\n+                <p>Max Reference Value: {report.testReport.maxReferenceValue}</p>\n+                <p>Primary Sample Type: {report.testReport.primarySampleType}</p>\n+                {/* Add more BloodReport details as needed */}\n+              </div>\n+            );\n+          }\n+        }\n+        if (report.testMasterReports) {\n+          return renderTestPanelReport({ testMasterReportList: report.testMasterReports });\n+        }\n+        return null;\n+      });\n+    }\n+    return null;\n+  };\n \n-const TestComponent = ({ data }) => {\n   return (\n     <div>\n-      <h2 className=\"text-xl font-semibold mb-2\">Tests:</h2>\n-      <table className=\"w-full border-collapse\">\n+      <h2>Tests:</h2>\n+      <table>\n         <thead>\n           <tr>\n-            <th className=\"border px-4 py-2\">Test Name</th>\n-            <th className=\"border px-4 py-2\">Barcode</th>\n-            <th className=\"border px-4 py-2\">Cost</th>\n-            <th className=\"border px-4 py-2\">Code</th>\n-            <th className=\"border px-4 py-2\">Test Panel Report</th>\n+            <th>Test Name</th>\n+            <th>Barcode</th>\n+            <th>Cost</th>\n+            <th>Code</th>\n+            <th>Test Panel Report</th>\n             {/* Add more table headers as needed */}\n           </tr>\n         </thead>\n         <tbody>\n           {data.bookingSlip.tests.map((test) => (\n             <tr key={test.id}>\n-              <td className=\"border px-4 py-2\">{test.name}</td>\n-              <td className=\"border px-4 py-2\">{test.barCode}</td>\n-              <td className=\"border px-4 py-2\">{test.cost}</td>\n-              <td className=\"border px-4 py-2\">{test.code}</td>\n-              <td className=\"border px-4 py-2\">\n-                <table className=\"w-full border-collapse\">\n-                  <thead>\n-                    <tr>\n-                      <th className=\"border px-4 py-2\">Name</th>\n-                      <th className=\"border px-4 py-2\">Test Master Name</th>\n-                      <th className=\"border px-4 py-2\">Report Type</th>\n-                      <th className=\"border px-4 py-2\">Test Report ID</th>\n-                      <th className=\"border px-4 py-2\">Test Report Date</th>\n-                      <th className=\"border px-4 py-2\">View Report</th>\n-                      {/* Add more table headers as needed */}\n-                    </tr>\n-                  </thead>\n-                  <tbody>\n-                    {test.testPanelReport.testMasterReportList.map((report) => (\n-                      <tr key={report.testReport.testReportId}>\n-                        <td className=\"border px-4 py-2\">{test.testPanelReport.name}</td>\n-                        <td className=\"border px-4 py-2\">{report.testMasterName}</td>\n-                        <td className=\"border px-4 py-2\">{report.testReport.report_type}</td>\n-                        <td className=\"border px-4 py-2\">{report.testReport.testReportId}</td>\n-                        <td className=\"border px-4 py-2\">{report.testReport.testReportDate}</td>\n-                        <td className=\"border px-4 py-2\">\n-                          <TestReportModal testReport={report.testReport} />\n-                        </td>\n-                        {/* Add more table data as needed */}\n-                      </tr>\n-                    ))}\n-                  </tbody>\n-                </table>\n+              <td>{test.name}</td>\n+              <td>{test.barCode}</td>\n+              <td>{test.cost}</td>\n+              <td>{test.code}</td>\n+              <td>\n+                <div>{renderTestPanelReport(test.testPanelReport)}</div>\n               </td>\n               {/* Add more table data as needed */}\n             </tr>\n           ))}\n@@ -210,13 +189,13 @@\n             </p>\n             <p className=\"text-gray-700\">Date: {booking.bookingSlip.date}</p>\n             <p className=\"text-gray-700\">Time: {booking.bookingSlip.time}</p>\n             <button\n-              className=\"px-3 py-2 bg-blue-500 text-white rounded hover:bg-blue-600\"\n+              className=\"px-3 py-3 bg-gray-200 hover:bg-gray-300 text-gray-600\"\n               onClick={() => handleOpenModal(booking)}\n             >\n-              <FaDownload className=\"inline-block mr-2\" />\n-              View and Download PDF\n+              <FaDownload className=\"text-black-500 test-2xl\" />\n+              {/* View and Download PDF */}\n             </button>\n           </div>\n         ))}\n       </div>\n"
                },
                {
                    "date": 1719591056706,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,24 +7,32 @@\n   if (!showModal) return null;\n \n   return (\n     <div className=\"fixed z-10 inset-0 overflow-y-auto\">\n-      <div className=\"flex items-center justify-center min-h-screen\">\n-        <div className=\"fixed inset-0 transition-opacity\">\n+      <div className=\"flex items-center justify-center min-h-screen pt-4 px-4 pb-20 text-center sm:block sm:p-0\">\n+        <div className=\"fixed inset-0 transition-opacity\" aria-hidden=\"true\">\n           <div className=\"absolute inset-0 bg-gray-500 opacity-75\"></div>\n         </div>\n-        <div className=\"bg-white w-full h-full overflow-hidden shadow-xl transform transition-all\">\n-          <div className=\"bg-white p-4\">\n-            <div className=\"flex justify-end\">\n-              <button\n-                onClick={handleClose}\n-                className=\"text-gray-500 hover:text-gray-700\"\n-              >\n-                &times;\n-              </button>\n+        <span className=\"hidden sm:inline-block sm:align-middle sm:h-screen\" aria-hidden=\"true\">\n+          &#8203;\n+        </span>\n+        <div className=\"inline-block align-bottom bg-white rounded-lg text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-middle sm:max-w-lg sm:w-full\">\n+          <div className=\"bg-white px-4 pt-5 pb-4 sm:p-6 sm:pb-4\">\n+            <div className=\"sm:flex sm:items-start\">\n+              <div className=\"mt-3 text-center sm:mt-0 sm:ml-4 sm:text-left\">\n+                {children}\n+              </div>\n             </div>\n-            <div>{children}</div>\n           </div>\n+          <div className=\"bg-gray-50 px-4 py-3 sm:px-6 sm:flex sm:flex-row-reverse\">\n+            <button\n+              type=\"button\"\n+              className=\"mt-3 w-full inline-flex justify-center rounded-md border border-gray-300 shadow-sm px-4 py-2 bg-white text-base font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 sm:mt-0 sm:ml-3 sm:w-auto sm:text-sm\"\n+              onClick={handleClose}\n+            >\n+              Close\n+            </button>\n+          </div>\n         </div>\n       </div>\n     </div>\n   );\n"
                },
                {
                    "date": 1719591104206,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -174,40 +174,51 @@\n     setSelectedBooking(null);\n   };\n \n   return (\n-    <div className=\"max-w-4xl mx-auto p-4 bg-white shadow-md rounded-lg\">\n-      <h1 className=\"text-2xl font-bold mb-4\">ALL Bookings of {date}</h1>\n-      <div className=\"flex items-center border rounded-lg overflow-hidden mb-4\">\n-        <input\n-          type=\"date\"\n-          value={date}\n-          className=\"w-full px-3 py-2 border-none outline-none\"\n-          onChange={(e) => setDate(e.target.value)}\n-        />\n+    <div className=\"max-w-7xl mx-auto py-6 sm:px-6 lg:px-8\">\n+      <div className=\"px-4 py-6 sm:px-0\">\n+        <h1 className=\"text-3xl font-bold leading-tight text-gray-900 mb-4\">\n+          ALL Bookings of {date}\n+        </h1>\n+        <div className=\"mb-4\">\n+          <input\n+            type=\"date\"\n+            value={date}\n+            onChange={(e) => setDate(e.target.value)}\n+            className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n+          />\n+        </div>\n+        <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-4\">\n+          {bookings.map((booking) => (\n+            <div key={booking.id} className=\"bg-white overflow-hidden shadow rounded-lg\">\n+              <div className=\"px-4 py-5 sm:px-6\">\n+                <h2 className=\"text-lg leading-6 font-medium text-gray-900\">\n+                  {booking.patientDetails.firstName} {booking.patientDetails.lastName}\n+                </h2>\n+                <p className=\"mt-1 max-w-2xl text-sm text-gray-500\">\n+                  Patient ID: {booking.bookingSlip.patientId}\n+                </p>\n+                <p className=\"mt-1 max-w-2xl text-sm text-gray-500\">\n+                  Date: {booking.bookingSlip.date}\n+                </p>\n+                <p className=\"mt-1 max-w-2xl text-sm text-gray-500\">\n+                  Time: {booking.bookingSlip.time}\n+                </p>\n+              </div>\n+              <div className=\"px-4 py-4 sm:px-6\">\n+                <button\n+                  className=\"inline-flex items-center px-4 py-2 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n+                  onClick={() => handleOpenModal(booking)}\n+                >\n+                  <FaDownload className=\"-ml-1 mr-2 h-5 w-5\" aria-hidden=\"true\" />\n+                  View and Download PDF\n+                </button>\n+              </div>\n+            </div>\n+          ))}\n+        </div>\n       </div>\n-      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n-        {bookings.map((booking) => (\n-          <div key={booking.id} className=\"bg-white shadow-md rounded-lg p-4\">\n-            <h2 className=\"text-xl font-semibold mb-2\">\n-              {booking.patientDetails.firstName}{\" \"}\n-              {booking.patientDetails.lastName}\n-            </h2>\n-            <p className=\"text-gray-700\">\n-              Patient ID: {booking.bookingSlip.patientId}\n-            </p>\n-            <p className=\"text-gray-700\">Date: {booking.bookingSlip.date}</p>\n-            <p className=\"text-gray-700\">Time: {booking.bookingSlip.time}</p>\n-            <button\n-              className=\"px-3 py-3 bg-gray-200 hover:bg-gray-300 text-gray-600\"\n-              onClick={() => handleOpenModal(booking)}\n-            >\n-              <FaDownload className=\"text-black-500 test-2xl\" />\n-              {/* View and Download PDF */}\n-            </button>\n-          </div>\n-        ))}\n-      </div>\n \n       <Modal showModal={showModal} handleClose={handleCloseModal}>\n         {selectedBooking && <TestComponent data={selectedBooking} />}\n       </Modal>\n@@ -215,4 +226,6 @@\n   );\n };\n \n export default AllBooking;\n+\n+This code includes the styling I mentioned earlier. It makes the page look more visually appealing and user-friendly. The modal is styled to be centered on the screen and has a close button. The booking cards have a shadow and a rounded border. The date input has a border and a shadow. The button to open the modal has a gradient background and a shadow.\n"
                }
            ],
            "date": 1719587418231,
            "name": "Commit-0",
            "content": "import React, { useState, useEffect } from \"react\";\nimport { FaDownload } from \"react-icons/fa6\";\nimport jsPDF from \"jspdf\";\nimport \"jspdf-autotable\";\nimport TestComponent from \"./TestComponent\";\n// import QRCode from \"qrcode\";\n\nconst Modal = ({ showModal, handleClose, children }) => {\n  if (!showModal) return null;\n\n  return (\n    <div className=\"fixed z-10 inset-0 overflow-y-auto\">\n      <div className=\"flex items-center justify-center min-h-screen\">\n        <div className=\"fixed inset-0 transition-opacity\">\n          <div className=\"absolute inset-0 bg-gray-500 opacity-75\"></div>\n        </div>\n        <div className=\"bg-white w-full h-full overflow-hidden shadow-xl transform transition-all\">\n          <div className=\"bg-white p-4\">\n            <div className=\"flex justify-end\">\n              <button\n                onClick={handleClose}\n                className=\"text-gray-500 hover:text-gray-700\"\n              >\n                &times;\n              </button>\n            </div>\n            <div>{children}</div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\nconst AllBooking = () => {\n  const [bookings, setBookings] = useState([]);\n  const [date, setDate] = useState(new Date().toISOString().split(\"T\")[0]);\n  const [showModal, setShowModal] = useState(false);\n  const [selectedBooking, setSelectedBooking] = useState(null);\n\n  const fetchBookings = async (selectedDate) => {\n    try {\n      const response = await fetch(\n        `http://localhost:8080/api/v1/lab/bookings?date=${selectedDate}`,\n        {\n          method: \"GET\",\n          headers: {\n            \"X-API-KEY\": \"test123\",\n            \"X-PARTNER-ID\": \"PYTHONMAN2\",\n          },\n        }\n      );\n      const result = await response.json();\n      setBookings(result);\n    } catch (error) {\n      console.error(\"Error fetching bookings:\", error);\n    }\n  };\n\n  useEffect(() => {\n    fetchBookings(date);\n  }, [date]);\n\n  const handleOpenModal = (booking) => {\n    setSelectedBooking(booking);\n    setShowModal(true);\n  };\n\n  const handleCloseModal = () => {\n    setShowModal(false);\n    setSelectedBooking(null);\n  };\n\n  return (\n    <div className=\"max-w-4xl mx-auto p-4 bg-white shadow-md rounded-lg\">\n      <h1 className=\"text-2xl font-bold mb-4\">ALL Bookings of {date}</h1>\n      <div className=\"flex items-center border rounded-lg overflow-hidden mb-4\">\n        <input\n          type=\"date\"\n          value={date}\n          className=\"w-full px-3 py-2 border-none outline-none\"\n          onChange={(e) => setDate(e.target.value)}\n        />\n      </div>\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n        {bookings.map((booking) => (\n          <div key={booking.id} className=\"bg-white shadow-md rounded-lg p-4\">\n            <h2 className=\"text-xl font-semibold mb-2\">\n              {booking.patientDetails.firstName}{\" \"}\n              {booking.patientDetails.lastName}\n            </h2>\n            <p className=\"text-gray-700\">\n              Patient ID: {booking.bookingSlip.patientId}\n            </p>\n            <p className=\"text-gray-700\">Date: {booking.bookingSlip.date}</p>\n            <p className=\"text-gray-700\">Time: {booking.bookingSlip.time}</p>\n            <button\n              className=\"px-3 py-3 bg-gray-200 hover:bg-gray-300 text-gray-600\"\n              onClick={() => handleOpenModal(booking)}\n            >\n              <FaDownload className=\"text-black-500 test-2xl\" />\n              {/* View and Download PDF */}\n            </button>\n          </div>\n        ))}\n      </div>\n\n      <Modal showModal={showModal} handleClose={handleCloseModal}>\n        {selectedBooking && <TestComponent data={selectedBooking} />}\n      </Modal>\n    </div>\n  );\n};\n\nexport default AllBooking;\n// const AllBooking = () => {\n//   const [bookings, setBookings] = useState([]);\n//   const [data, setData] = useState({});\n//   const [date, setDate] = useState(new Date().toISOString().split(\"T\")[0]);\n\n//   const fetchBookings = async (selectedDate) => {\n//     try {\n//       const response = await fetch(\n//         `http://ec2-13-233-207-62.ap-south-1.compute.amazonaws.com:8080/api/v1/lab/bookings?date=${selectedDate}`,\n//         {\n//           method: \"GET\",\n//           headers: {\n//             \"X-API-KEY\": \"test123\",\n//             \"X-PARTNER-ID\": \"PYTHONMAN2\",\n//           },\n//         }\n//       );\n//       const result = await response.json();\n//       console.log(result, \"data-----\");\n//       setBookings(result);\n//     } catch (error) {\n//       console.error(\"Error fetching bookings:\", error);\n//     }\n//   };\n\n//   useEffect(() => {\n//     fetchBookings(date);\n//   }, [date]);\n\n//   const pdfData = {\n//     patientName: \"john \",\n//     age: \"21 Years\",\n//     sex: \"Male\",\n//     pid: \"555\",\n//     sampleCollectedAt: \"125, Shivam Bungalow, S G Road, Mumbai\",\n//     refBy: \"Dr. Hiren Shah\",\n//     registeredOn: \"02:31 PM 02 Dec, 2X\",\n//     collectedOn: \"03:11 PM 02 Dec, 2X\",\n//     reportedOn: \"04:35 PM 02 Dec, 2X\",\n//     results: [\n//       {\n//         investigation: \"Hemoglobin (Hb)\",\n//         result: \"12.5\",\n//         reference: \"13.0 - 17.0\",\n//         unit: \"g/dL\",\n//         className: \"low\",\n//       },\n//       {\n//         investigation: \"Total RBC count\",\n//         result: \"5.2\",\n//         reference: \"4.5 - 5.5\",\n//         unit: \"mill/cumm\",\n//       },\n//       {\n//         investigation: \"Packed Cell Volume (PCV)\",\n//         result: \"57.5\",\n//         reference: \"40 - 50\",\n//         unit: \"%\",\n//         className: \"high\",\n//       },\n//       {\n//         investigation: \"Mean Corpuscular Volume (MCV)\",\n//         result: \"87.75\",\n//         reference: \"83 - 101\",\n//         unit: \"fL\",\n//       },\n//       {\n//         investigation: \"MCH\",\n//         result: \"27.2\",\n//         reference: \"27 - 32\",\n//         unit: \"pg\",\n//       },\n//       {\n//         investigation: \"MCHC\",\n//         result: \"32.8\",\n//         reference: \"32.5 - 34.5\",\n//         unit: \"g/dL\",\n//       },\n//       {\n//         investigation: \"RDW\",\n//         result: \"13.6\",\n//         reference: \"11.6 - 14.0\",\n//         unit: \"%\",\n//       },\n//       {\n//         investigation: \"Total WBC count\",\n//         result: \"9000\",\n//         reference: \"4000-11000\",\n//         unit: \"cumm\",\n//       },\n//       {\n//         investigation: \"Neutrophils\",\n//         result: \"60\",\n//         reference: \"50 - 62\",\n//         unit: \"%\",\n//       },\n//       {\n//         investigation: \"Lymphocytes\",\n//         result: \"31\",\n//         reference: \"20 - 40\",\n//         unit: \"%\",\n//       },\n//       {\n//         investigation: \"Eosinophils\",\n//         result: \"1\",\n//         reference: \"00 - 06\",\n//         unit: \"%\",\n//       },\n//       {\n//         investigation: \"Monocytes\",\n//         result: \"7\",\n//         reference: \"00 - 10\",\n//         unit: \"%\",\n//       },\n//       {\n//         investigation: \"Basophils\",\n//         result: \"1\",\n//         reference: \"00 - 02\",\n//         unit: \"%\",\n//       },\n//       {\n//         investigation: \"Platelet Count\",\n//         result: \"150000\",\n//         reference: \"150000 - 410000\",\n//         unit: \"cumm\",\n//       },\n//     ],\n//     interpretation: \"Further confirm for Anemia\",\n//     generatedOn: \"02 Dec, 20XX 05:00 PM\",\n//     technicians: [\n//       { name: \"Medical Lab Technician\", title: \"(DMLT, BMLT)\" },\n//       { name: \"Dr. Payal Shah\", title: \"(MD, Pathologist)\" },\n//       { name: \"Dr. Vimal Shah\", title: \"(MD, Pathologist)\" },\n//     ],\n//   };\n\n//   const generatePDF = async (data) => {\n//     const doc = new jsPDF();\n\n//     // Add 7Labs heading\n//     doc.setFontSize(24);\n//     doc.text(\"7Labs\", 80, 20);\n\n//     // Add title and other content\n\n//     // Generate QR Code\n//     // const qrCodeUrl = await QRCode.toDataURL(\n//     //   `${data.patientDetails.firstName} ${data.patientDetails.lastName}`\n//     // );\n//     // doc.addImage(qrCodeUrl, \"PNG\", 160, 10, 50, 50);\n\n//     // Add patient information\n//     doc.setFontSize(12);\n//     doc.text(\"Patient Information\", 10, 90);\n//     doc.setFontSize(10);\n//     doc.text(\n//       `Name: ${data.patientDetails.firstName} ${data.patientDetails.lastName}`,\n//       10,\n//       100\n//     );\n//     doc.text(`Age: ${data.patientDetails.ageInYears} Years`, 10, 110);\n//     doc.text(`Sex: ${data.patientDetails.gender}`, 10, 120);\n//     doc.text(`PID: ${data.patientDetails.patientId}`, 10, 130);\n\n//     // Add sample information\n//     doc.setFontSize(12);\n//     doc.text(\"Sample Information\", 100, 90);\n//     doc.setFontSize(10);\n//     doc.text(`Sample Collected At: ${data.bookingSlip.sampleBy}`, 100, 100);\n//     doc.text(`Ref. By: ${data.bookingSlip.referralDoctorId}`, 100, 110);\n//     doc.text(\n//       `Registered on: ${data.bookingSlip.date} ${data.bookingSlip.time}`,\n//       100,\n//       120\n//     );\n//     doc.text(\n//       `Collected on: ${data.bookingSlip.date} ${data.bookingSlip.time}`,\n//       100,\n//       130\n//     );\n//     doc.text(\n//       `Reported on: ${data.bookingSlip.date} ${data.bookingSlip.time}`,\n//       100,\n//       140\n//     );\n\n//     // Add table\n//     let y = 150;\n//     for (const test of data.bookingSlip.tests) {\n//       const testMasterReportTable = [\n//         // Add headers\n//         [\"Investigation\", \"Result\", \"Reference Value\", \"Unit\"],\n//         ...test.testPanelReport.testMasterReportList.map((report) => {\n//           const investigation = report.testMasterName;\n//           const result = report.testReport?.result ?? \"\";\n//           const referenceValue = report.testReport?.referenceValue ?? \"\";\n//           const unit = report.testReport?.unit ?? \"\";\n\n//           // Add test master reports\n//           const testMasterReports = report.testMasterReports ?? [];\n//           const testMasterReportRows = testMasterReports.map((subReport) => {\n//             const subInvestigation = subReport.testMasterName;\n//             const subResult = subReport.testReport?.result ?? \"\";\n//             const subReferenceValue =\n//               subReport.testReport?.referenceValue ?? \"\";\n//             const subUnit = subReport.testReport?.unit ?? \"\";\n//             return [subInvestigation, subResult, subReferenceValue, subUnit];\n//           });\n\n//           // Add row for current report\n//           return [\n//             [investigation, result, referenceValue, unit],\n//             ...testMasterReportRows,\n//           ];\n//         }),\n//       ];\n\n//       // Check if testMasterReportTable is not empty\n//       if (testMasterReportTable.length > 1) {\n//         doc.setFontSize(12);\n//         doc.text(test.name, 10, y);\n//         doc.autoTable({\n//           head: testMasterReportTable.slice(0, 1),\n//           body: testMasterReportTable.slice(1),\n//           startY: y + 10,\n//           margin: { left: 10 },\n//           theme: \"striped\",\n//         });\n//         y += 40 + (testMasterReportTable.length - 1) * 10;\n//       }\n//     }\n\n//     // Add interpretation\n//     doc.text(\n//       \"Interpretation: Further confirm for Anemia\",\n//       10,\n//       doc.lastAutoTable.finalY + 10\n//     );\n\n//     // Add signatures\n//     // doc.text(\"________________________\", 10, doc.lastAutoTable.finalY + 30);\n//     // doc.text(\"Medical Lab Technician\", 10, doc.lastAutoTable.finalY + 40);\n//     // doc.text(\"(DMLT, BMLT)\", 10, doc.lastAutoTable.finalY + 50);\n\n//     // doc.text(\"________________________\", 70, doc.lastAutoTable.finalY + 30);\n//     // doc.text(\"Dr. Payal Shah\", 70, doc.lastAutoTable.finalY + 40);\n//     // doc.text(\"(MD, Pathologist)\", 70, doc.lastAutoTable.finalY + 50);\n\n//     // doc.text(\"________________________\", 140, doc.lastAutoTable.finalY + 30);\n//     // doc.text(\"Dr. Vimal Shah\", 140, doc.lastAutoTable.finalY + 40);\n//     // doc.text(\"(MD, Pathologist)\", 140, doc.lastAutoTable.finalY + 50);\n\n//     // Add footer\n//     doc.text(\n//       `Generated on: ${data.bookingSlip.date} ${data.bookingSlip.time}`,\n//       10,\n//       doc.lastAutoTable.finalY + 70\n//     );\n\n//     // Save the PDF\n//     doc.save(\"pathology-report.pdf\");\n//   };\n//   console.log(data, \"booking\");\n//   return (\n//     <>\n//       <div className=\"max-w-4xl mx-auto p-4 bg-white shadow-md rounded-lg\">\n//         <h1 className=\"text-2xl font-bold mb-4\">ALL Bookings of {date}</h1>\n//         <div className=\"flex items-center border rounded-lg overflow-hidden mb-4\">\n//           <input\n//             type=\"date\"\n//             value={date}\n//             className=\"w-full px-3 py-2 border-none outline-none\"\n//             onChange={(e) => {\n//               setDate(e.target.value);\n//             }}\n//           />\n//         </div>\n//         <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n//           {bookings.map((booking) => (\n//             <div key={booking.id} className=\"bg-white shadow-md rounded-lg p-4\">\n//               <h2 className=\"text-xl font-semibold mb-2\">\n//                 {booking.patientDetails.firstName}{\" \"}\n//                 {booking.patientDetails.lastName}\n//               </h2>\n//               <p className=\"text-gray-700\">\n//                 Patient ID: {booking.bookingSlip.patientId}\n//               </p>\n//               <p className=\"text-gray-700\">Date: {booking.bookingSlip.date}</p>\n//               <p className=\"text-gray-700\">Time: {booking.bookingSlip.time}</p>\n//               <button\n//                 className=\"px-3 py-3 bg-gray-200 hover:bg-gray-300 text-gray-600\"\n//                 onClick={() => {\n//                   setData(booking);\n//                   // generatePDF(booking);\n//                 }} // <-- Wrap in anonymous function\n//               >\n//                 <FaDownload className=\"text-black-500 test-2xl\" />\n//               </button>\n//             </div>\n//           ))}\n//         </div>\n//       </div>\n//       <TestComponent data={data} />\n//     </>\n//   );\n// };\n\n// export default AllBooking;\n"
        }
    ]
}